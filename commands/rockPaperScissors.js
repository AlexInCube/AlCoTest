const {MessageActionRow, MessageButton} = require("discord.js");
const Discord = module.require("discord.js");

module.exports.help = {
    name: "rps"
};

module.exports.run = async (client,message) => {
    let user_attacker = message.author;
    let user_defender = message.mentions.users.first();

    if (!user_defender){message.reply("–Ø –Ω–µ –ø–æ–Ω—è–ª –∫–æ–≥–æ —Ç—ã –≤—ã–∑–≤–∞–ª"); return}
    if (user_defender.bot){message.reply("–° —Ä–æ–±–æ—Ç–∞–º–∏ –∏–≥—Ä–∞—Ç—å –Ω–µ–ª—å–∑—è, –æ–Ω–∏ —Ç–µ–±–µ –ø—Ä–æ—Å—Ç–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ—Ç–≤–µ—Ç—è—Ç, –Ω–∞–π–¥–∏ —Å–µ–±–µ –¥—Ä—É–∑–µ–π."); return}
    if (user_attacker.id === user_defender.id){message.reply("–ù–µ–ª—å–∑—è –∫–∏–Ω—É—Ç—å –≤—ã–∑–æ–≤ —Å–∞–º–æ–º—É —Å–µ–±–µ"); return}

    let items = {
        rock: "üóø",
        scissors: "‚úÇÔ∏è",
        paper: "üßª"
    }

    let duelEmbed = new Discord.MessageEmbed()//–°–æ–∑–¥–∞—ë–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–ª–µ–µ—Ä–æ–º
        .setColor('#ffffff')
        .setTitle(`${user_attacker.username} –∫–∏–Ω—É–ª –≤—ã–∑–æ–≤ ${user_defender.username}`)
        .setDescription("–í—ã–±–∏—Ä–∞–π –æ—Ä—É–∂–∏–µ –∏ –∂–¥–∏ –æ–ø–ø–æ–Ω–µ–Ω—Ç–∞, –Ω–∞ –æ—Ç–≤–µ—Ç –¥–∞—ë—Ç—Å—è 10 —Å–µ–∫—É–Ω–¥.")

    const duelButtons = new MessageActionRow()//–°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–ª–µ–µ—Ä–∞
        .addComponents(
            new MessageButton().setCustomId("rock").setLabel(items.rock+"–ö–∞–º–µ–Ω—å").setStyle("PRIMARY"),
            new MessageButton().setCustomId("paper").setLabel(items.paper+"–ë—É–º–∞–≥–∞").setStyle("PRIMARY"),
            new MessageButton().setCustomId("scissors").setLabel(items.scissors+"–ù–æ–∂–Ω–∏—Ü—ã").setStyle("PRIMARY"),
        )

    let duelMessage = await message.channel.send({embeds: [duelEmbed], components: [duelButtons]}); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–ª–µ–µ—Ä–æ–º

    let attacker_choice,defender_choice;

    const filter = i => i.customId;

    const collector = message.channel.createMessageComponentCollector({filter, time: 10000});

    collector.on('collect', async i => {
        if(i.user.id !== user_attacker.id && i.user.id !== user_defender.id){
            await i.reply({content: `–ù–µ —Ç–µ–±–µ –¥—É—ç–ª—å –∫–∏–¥–∞–ª–∏, –Ω–µ –¥–ª—è —Ç–µ–±—è —è–≥–æ–¥–∫–∞ —Ä–æ—Å–ª–∞.`,ephemeral: true})
            return
        }

        if (i.customId === 'rock') {
            if(i.user.id === user_attacker.id){attacker_choice = items.rock}
            if(i.user.id === user_defender.id){defender_choice = items.rock}

            await i.reply({content: `–í—ã –≤—ã–±—Ä–∞–ª–∏ ${items.rock}`,ephemeral: true})
        }
        if (i.customId === 'paper') {
            if(i.user.id === user_attacker.id){attacker_choice = items.paper}
            if(i.user.id === user_defender.id){defender_choice = items.paper}

            await i.reply({content: `–í—ã –≤—ã–±—Ä–∞–ª–∏ ${items.paper}`,ephemeral: true})
        }
        if (i.customId === 'scissors') {
            if(i.user.id === user_attacker.id){attacker_choice = items.scissors}
            if(i.user.id === user_defender.id){defender_choice = items.scissors}

            await i.reply({content: `–í—ã –≤—ã–±—Ä–∞–ª–∏ ${items.scissors}`,ephemeral: true})
        }

        if (attacker_choice !== undefined && defender_choice !== undefined){
            let resultEmbed = new Discord.MessageEmbed()//–°–æ–∑–¥–∞—ë–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–ª–µ–µ—Ä–æ–º
                .setColor('#49f743')

            switch (getResult(attacker_choice,defender_choice)){
                case 1:
                    resultEmbed.setTitle(`${user_attacker.username} –ø–æ–±–µ–¥–∏–ª –ø—Ä–æ—Ç–∏–≤ ${user_defender.username}`)
                    break
                case 2:
                    resultEmbed.setTitle(`–£ ${user_defender.username} –∏ ${user_attacker.username} –≤—ã—à–ª–∞ –Ω–∏—á—å—è`).setColor(`#ffffff`)
                    break
                case 0:
                    resultEmbed.setTitle(`${user_defender.username} –ø–æ–±–µ–¥–∏–ª –ø—Ä–æ—Ç–∏–≤ ${user_attacker.username}`)
                    break
            }

            await message.channel.send({embeds: [resultEmbed.addFields(
                    {name: `–í—ã–±–æ—Ä ${user_attacker.username}`, value: attacker_choice,inline: true},
                    {name: `–í—ã–±–æ—Ä ${user_defender.username}`, value: defender_choice,inline: true},
                )]})

            collector.stop("winner_decided")
        }
    });

    collector.on('end', async (i,reason) => {
        duelMessage.delete()
        if (reason && reason !== "winner_decided"){await message.reply("–î—É—ç–ª—å –Ω–µ —Å–æ—Å—Ç–æ—è–ª–∞—Å—å, –≤—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ")}
    });

    function getResult(attack_choice, defend_choice) {
        if(attack_choice === items.rock && defend_choice === items.scissors) {
            return 1
        } else if (attack_choice === items.paper && defend_choice === items.rock) {
            return 1
        } else if (attack_choice === items.scissors && defend_choice === items.paper){
            return 1
        } else if (attack_choice === defend_choice) {
            return 2
        } else {
            return 0
        }
    }
};
